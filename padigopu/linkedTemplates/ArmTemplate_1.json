{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "padigopu"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Child Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.PassingSchema",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{item().Src_Query}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "SqlServerSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Source_Table",
											"type": "DatasetReference",
											"parameters": {
												"Table_Schema": "@{item().Src_Schema}",
												"Table_Name": "@{item().Src_Table}",
												"Database_Name": "@{item().Src_Database}",
												"Server_Name": "@{item().Src_Server}",
												"User_Name": "@{item().Src_User}",
												"Password": "@{item().Src_Pwd}",
												"Query": "@{item().Src_Query}",
												"ID": "@{item().ID}",
												"Query_v1": "@{item().Src_Query_v1}",
												"Param_1": "@{item().Src_Param_1}",
												"Max_Query": "@{item().Src_MaxQuery}",
												"Src_Legacy_System": "@{item().Src_Legacy_System}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Target_Table",
											"type": "DatasetReference",
											"parameters": {
												"Target_Table": "@{item().Trg_Table}",
												"Target_Schema": "@{item().Trg_Schema}",
												"DatabaseName": "@{item().Trg_Database}",
												"Target_ServerName": "@{item().Trg_Server}",
												"Target_UserName": "@{item().Trg_User}",
												"Target_Password": "@{item().Trg_Pwd}",
												"Target_Query": "@{item().Trg_Pwd}",
												"Target_Param_1": "@{item().Trg_Pwd}"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"PassingSchema": {
						"type": "array"
					}
				},
				"variables": {
					"id": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Master_WF3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\nselect *\nFROM metadata.All_Connections_v2_vw\nWHERE Workflow = 'WF3'",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_Metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Call - PL Child WF3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Child_WF3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PassingSchema": {
									"value": "@activity('Lookup1').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored Procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM metadata.All_Connections_v2\nwhere workflow = 'WF1'\n",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_Metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Child Pipeline Clone 2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PassingSchema": {
									"value": "@activity('Lookup1').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[metadata].[sp_Truncate_StagingTables]"
						},
						"linkedServiceName": {
							"referenceName": "LS_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "InsertWaterMarkLogHist",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[usp_WaterMarkLogHist]"
						},
						"linkedServiceName": {
							"referenceName": "LS_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateAllConnectionsParameters",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "InsertWaterMarkLogHist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[usp_All_Connections_v2_Update_Parameters]"
						},
						"linkedServiceName": {
							"referenceName": "LS_Metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		}
	]
}